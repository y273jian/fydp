# Generated by Django 3.1.4 on 2020-12-13 22:35

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CameraInfo',
            fields=[
                ('camera_id', models.UUIDField(primary_key=True, serialize=False)),
                ('serial_number', models.UUIDField(blank=True, null=True, unique=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('longtitude', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('altitude', models.DecimalField(blank=True, decimal_places=65535, max_digits=65535, null=True)),
                ('setup_date', models.DateTimeField(blank=True, null=True)),
                ('battery_level', models.IntegerField(blank=True, null=True)),
                ('is_long_range', models.BooleanField(blank=True, null=True)),
                ('bandwidth', models.IntegerField(blank=True, null=True)),
                ('bit_rate', models.IntegerField(blank=True, null=True)),
                ('spread_factor', models.IntegerField(blank=True, null=True)),
                ('freq_deviation', models.IntegerField(blank=True, null=True)),
                ('transmit_power', models.IntegerField(blank=True, null=True)),
                ('last_active_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'camera_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CentralHub',
            fields=[
                ('ch_id', models.UUIDField(primary_key=True, serialize=False)),
                ('ip_addr', models.GenericIPAddressField(blank=True, null=True)),
            ],
            options={
                'db_table': 'central_hub',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CorrectedData',
            fields=[
                ('corrected_id', models.UUIDField(primary_key=True, serialize=False)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('corrected_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'corrected_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExtractedData',
            fields=[
                ('record_id', models.UUIDField(primary_key=True, serialize=False)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('processed_time', models.DateTimeField(blank=True, null=True)),
                ('is_viewed', models.BooleanField(blank=True, null=True)),
                ('viewed_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'extracted_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImageInfo',
            fields=[
                ('image_id', models.UUIDField(primary_key=True, serialize=False)),
                ('file_path', models.TextField(blank=True, null=True)),
                ('size', models.IntegerField(blank=True, null=True)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('taken_time', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'image_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecordToCorrect',
            fields=[
                ('record_to_correct_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'record_to_correct',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RoleOfUser',
            fields=[
                ('role_of_user_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'role_of_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('user_id', models.UUIDField(primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(max_length=255)),
                ('salt', models.CharField(max_length=255)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'user_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('role_id', models.AutoField(primary_key=True, serialize=False)),
                ('role_name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'user_role',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WildlifeTypes',
            fields=[
                ('type_id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'wildlife_types',
                'managed': False,
            },
        ),
    ]
